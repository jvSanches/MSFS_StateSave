value_set=[1 (>L:var_crashbar, bool) 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) ! if{ 2 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }]
value_set=[(>H:FreeAirTempMode)]
value_get=[(L:bksq_PitotCovers, Bool)] value_set=[$ (>L:bksq_PitotCovers, Bool)]
value_get=[(L:bksq_EngineCovers, Bool)] value_set=[$ (>L:bksq_EngineCovers, Bool)]
value_get=[(L:bksq_WheelChocks, Bool)] value_set=[$ (>L:bksq_WheelChocks, bool)]
value_get=[(L:BKSQ_ConditionLever, Bool)] value_set=[$ (>L:BKSQ_ConditionLever, Number)]
value_get=[(L:var_crashbar, Bool)] value_set=[0 (>L:var_crashbar, bool) 0 (>L:BKSQ_SourceSwitch, Number) 0 (>L:BKSQ_GeneratorSwitch, Number) 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) if{ 2 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } ;1 (>L:var_crashbar, bool) 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) ! if{ 2 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }] 
value_get=[(L:BKSQ_SourceSwitch, Number)] value_set=[(L:var_crashbar, bool) if{ 0 (>L:BKSQ_SourceSwitch, Number) 2 (A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 3 2 (>K:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } };(L:var_crashbar, bool) if{ 1 (>L:BKSQ_SourceSwitch, Number) 2 (A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 3 2 (>K:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } };(L:var_crashbar, bool) if{ 2 (>L:BKSQ_SourceSwitch, Number) 2 (A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 3 2 (>K:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } }]
value_get=[(L:BKSQ_GeneratorSwitch, Number)] value_set=[(L:var_crashbar, bool) if{ $ (>L:BKSQ_GeneratorSwitch, Number) }]
value_get=[(L:BKSQ_StarterSwitch, Bool)] value_set=[$ (>L:BKSQ_StarterSwitch, Bool) (L:BKSQ_GeneratorSwitch, Number) 2 != (>K:STARTER1_SET)]
value_get=[(L:BKSQ_IgnitionSwitch, Number)] value_set=[$ (>L:BKSQ_IgnitionSwitch, Bool)]
value_get=[(L:var_emergencyPowerLeverPosition, Number)] value_set=[$ (>L:var_emergencyPowerLeverPosition, Number)]
value_get=[(L:var_AnnunciatorDim, Bool)] value_set=[$ (>L:var_AnnunciatorDim, Number)]
value_get=[(L:BKSQ_fuelPumpSwitch, Number)] value_set=[$ (>L:BKSQ_fuelPumpSwitch, Number)]
value_get=[(L:var_windshieldHeatSwitch_L, Bool)] value_set=[$ (>L:var_windshieldHeatSwitch_L, Bool)]
value_get=[(L:var_windshieldHeatSwitch_R, Bool)] value_set=[$ (>L:var_windshieldHeatSwitch_R, Bool)]
value_get=[(L:var_InertialSeparatorSwitch, Bool)] value_set=[$ (>L:var_InertialSeparatorSwitch, Bool)]
value_get=[(L:var_airframeDeice, Bool)] value_set=[$ (>L:var_airframeDeice, Bool)]
value_get=[(A:CIRCUIT SWITCH ON:57, Bool)] value_set=[$ (>A:CIRCUIT SWITCH ON:57, Bool)]
value_get=[(A:CIRCUIT SWITCH ON:58, Bool)] value_set=[$ (>A:CIRCUIT SWITCH ON:58, Bool)]
value_get=[(A:CIRCUIT SWITCH ON:59, Bool)] value_set=[$ (>A:CIRCUIT SWITCH ON:59, Bool)]
value_get=[(A:CIRCUIT SWITCH ON:50, Bool)] value_set=[$ (>A:CIRCUIT SWITCH ON:60, Bool)]
value_get=[(A:CIRCUIT SWITCH ON:40, Bool)] value_set=[$ (>A:CIRCUIT SWITCH ON:40, Bool)]
value_get=[(L:var_EssentialBusTieSwitch, Bool)] value_set=[$ (>L:var_EssentialBusTieSwitch, Bool)]
value_get=[(L:var_EssentialBusTieCover, Bool)] value_set=[$ (>L:var_EssentialBusTieCover, Bool)]
value_get=[(L:XMLVAR_Cabin_Air_1_Position, Number)] value_set=[$ (>L:XMLVAR_Cabin_Air_1_Position, Number)]
value_get=[(L:XMLVAR_Cabin_Air_2_Position, Number)] value_set=[$ (>L:XMLVAR_Cabin_Air_2_Position, Number)]
value_get=[(L:XMLVAR_Cabin_Air_3_Position, Number)] value_set=[$ (>L:XMLVAR_Cabin_Air_3_Position, Number)]
value_get=[(L:LIGHTING_NAV_1, Bool)] value_set=[1 $ (>K:2:NAV_LIGHTS_SET)]
value_get=[(L:LIGHTING_STROBE_1, Bool)] value_set=[1 $ (>K:2:STROBES_SET)]
value_get=[(L:LIGHTING_RECOG_1, Bool)] value_set=[1 $ (>K:2:RECOGNITION_LIGHTS_SET)]
value_get=[(L:LIGHTING_WING_1, Bool)] value_set=[1 $ (>K:2:WING_LIGHTS_SET)]
value_get=[(L:LIGHTING_TAXI_1, Bool)] value_set=[1 $ (>K:2:TAXI_LIGHTS_SET)]
value_get=[(L:LIGHTING_LANDING_1, Bool)] value_set=[1 $ (>K:2:LANDING_LIGHTS_SET)]
value_get=[(L:LIGHTING_LANDING_2, Bool)] value_set=[2 $ (>K:2:LANDING_LIGHTS_SET)]
value_get=[(L:var_InstrumentLightingKnob, Number)] value_set=[$ (>L:var_InstrumentLightingKnob, number)]
value_get=[(L:var_PanelLightingKnob, Number)] value_set=[$ (>L:var_PanelLightingKnob, Number)]
value_get=[(L:var_EmergencyLightsKnob, Number)] value_set=[$ (>L:var_EmergencyLightsKnob, number)]
value_get=[(L:var_ReadingLightSwitch_L, Bool)] value_set=[$ (>L:var_ReadingLightSwitch_L, Bool)]
value_get=[(L:var_ReadingLightSwitch_R, Bool)] value_set=[$ (>L:var_ReadingLightSwitch_R, Bool)]
value_get=[(L:var_CabinLights_Middle_L_Button, Bool)] value_set=[$ (>:var_CabinLights_Middle_L_Button, Bool)]
value_get=[(L:var_CabinLights_Middle_R_Button, Bool)] value_set=[$ (>:var_CabinLights_Middle_R_Button, Bool)]
value_get=[(L:var_CabinLights_Aft_L_Button, Bool)] value_set=[$ (>:var_CabinLights_Aft_L_Button, Bool)]
value_get=[(L:var_CabinLights_Aft_R_Button, Bool)] value_set=[$ (>:var_CabinLights_Aft_R_Button, Bool)]
value_get=[(L:var_BaggageLights_Button, Bool)] value_set=[$ (>L:var_BaggageLights_Button, Bool)]
value_get=[(L:var_AccessLights_Button, Bool )] value_set=[$ (L>:var_AccessLights_Button, Bool)]
value_get=[(L:var_oxygenMaster, Bool)] value_set=[$ (>L:var_oxygenMaster, Bool)]
value_get=[(L:var_passengerOxygen, Bool)] value_set=[$ (>L:var_passengerOxygen, Bool)]
value_get=[(L:var_pilotOxygen, Bool)] value_set=[$ (>L:var_pilotOxygen, Bool)]
value_get=[(L:var_coPilotOxygen, Bool)] value_set=[$ (>L:var_coPilotOxygen, Bool)]
value_get=[(L:var_bleedState, Number)] value_set=[$ (>L:var_bleedState, Number)]
value_get=[(L:var_airconState, Number)] value_set=[$ (>L:var_airconState, Number)]
value_get=[(L:var_FanSwitch, Bool)] value_set=[$ (>L:var_FanSwitch, Bool)]
value_get=[(L:var_AirFlowSelectorKnob, Number)] value_set=[$ (>L:var_AirFlowSelectorKnob, Number)]
value_get=[(L:var_CabinTemperatureKnob, Number)] value_set=[$ (>L:var_CabinTemperatureKnob, Number)]
value_get=[(L:var_pressurizationGoal, Number)] value_set=[$ (>L:var_pressurizationGoal, Number)]
value_get=[(L:var_pressurizationClimbRate, Number)] value_set=[$ (>L:var_pressurizationClimbRate, Number)]
value_get=[(L:var_PressurizationDumpCover, Bool)] value_set=[$ (>L:var_PressurizationDumpCover, Bool)]
value_get=[(L:var_PressurizationDump, Bool)] value_set=[$ (>L:var_PressurizationDump, Bool)]
value_get=[(L:var_EFIS_PowerSwitch, Bool )] value_set=[$ (>L:var_EFIS_PowerSwitch, Bool) $ (>A:CIRCUIT SWITCH ON:56, Bool) $ (>A:CIRCUIT SWITCH ON:55, Bool)]
value_get=[(L:var_RadioMasterSwitch, Bool)] value_set=[(L:var_RadioMasterSwitch, Bool) if{ 0 (>L:var_RadioMasterSwitch, Bool) 4 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:10, Bool) (L:var_RadioMasterSwitch, Bool) != if{ 10 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 5 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:11, Bool) (L:var_RadioMasterSwitch, Bool) != if{ 10 5 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 6 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:12, Bool) (L:var_RadioMasterSwitch, Bool) != if{ 10 6 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:13, Bool) (L:var_RadioMasterSwitch, Bool) != if{ 10 7 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:14, Bool) (L:var_RadioMasterSwitch, Bool) != if{ 10 8 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } };(L:var_RadioMasterSwitch, Bool) 0 == if{ 1 s0 (>L:var_RadioMasterSwitch, Bool) 4 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:10, Bool) l0 != if{ 10 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 5 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:11, Bool) l0 != if{ 10 5 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 6 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:12, Bool) l0 != if{ 10 6 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:13, Bool) l0 != if{ 10 7 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:14, Bool) l0 != if{ 10 8 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } }]
value_get=[(L:BKSQ_AutopilotMasterSwitch, Number)] value_set=[0 (>L:BKSQ_AutopilotMasterSwitch, Number) 0 (>A:CIRCUIT SWITCH ON:8, Bool) 1 (>L:var_trimsDisabled, Bool);1 (>L:BKSQ_AutopilotMasterSwitch, Number) 1 (>A:CIRCUIT SWITCH ON:8, Bool) 1 (>L:var_trimsDisabled, Bool);2 (>L:BKSQ_AutopilotMasterSwitch, Number) 1 (>A:CIRCUIT SWITCH ON:8, Bool) 0 (>L:var_trimsDisabled, Bool)]
value_get=[(L:var_GyroSlaveModeSwitch, Bool)] value_set=[$ (>L:var_GyroSlaveModeSwitch, Bool)]
value_get=[(L:var_efisDmeMode, Number )] value_set=[$ (>L:var_efisDmeMode, Number)]
value_get=[(L:var_dmeMode, Number)] value_set=[$ (>L:var_dmeMode, Number) 1 (>H:dmeMode$)]
value_get=[(L:var_CabinTempUnitMode, Bool)] value_set=[$ (>L:var_CabinTempUnitMode, Bool)]
value_get=[(L:var_EfisCompositeMode, Bool)] value_toggle=[(A:CIRCUIT ON:56, Bool) (A:CIRCUIT ON:55, Bool) or if{ (L:var_EfisCompositeMode, Bool) ! (>L:var_EfisCompositeMode, Bool) }]
value_get=[(L:var_EADI_Brightness, Number )] value_set=[$ (>L:var_EADI_Brightness, Number)]
value_get=[(L:var_EHSI_Brightness, Number)] value_set=[$ (>L:var_EHSI_Brightness, Number)]
value_get=[(L:var_copilotDecisionHeight, Number)] value_set=[$ (>L:var_copilotDecisionHeight, number)]
value_get=[(L:var_AltitudeReferenceBug, Number)] value_set=[$ (>L:var_AltitudeReferenceBug, Number)]
value_get=[(L:var_RNAV_VOLUME, Number)] value_set=[$ (>L:var_RNAV_VOLUME, Number) $ 5 > (>A:CIRCUIT SWITCH ON:76, bool)]
value_get=[(L:var_radarMode, Number )] value_set=[$ (>L:var_radarMode, Number) $ 0 > (A:CIRCUIT SWITCH ON:81, Bool) != if{ 81 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }]
value_get=[(L:var_RadarBrightness, Number)] value_set=[$ (>L:var_RadarBrightness, Number)]
value_get=[(L:var_RadarGain, Number)] value_set=[$ (>L:var_RadarGain, Number)]
value_get=[(L:var_RadarTilt, Number)] value_set=[$ (>L:var_RadarTilt, Number)]
value_get=[(L:var_EtmMode, Number)] value_set=[$ (>L:var_EtmMode, Number)]
value_get=[(L:DEICE_Pitot_1)] value_set=[$ (>L:DEICE_Pitot_2) 1 $ (>K:2:PITOT_HEAT_SET)]
value_get=[(L:DEICE_Pitot_2)] value_set=[$ (>L:DEICE_Pitot_2) 2 $ (>K:2:PITOT_HEAT_SET)]
value_get=[(A:COM VOLUME:1, percent)] value_set=[$ (>A:COM VOLUME:1, percent) $ 5 > (>A:CIRCUIT SWITCH ON:67, bool)] 
value_get=[(A:COM VOLUME:2, percent)] value_set=[$ (>K:COM2_VOLUME_SET) $ 5 > (>A:CIRCUIT SWITCH ON:69, bool)]
value_get=[(A:ADF VOLUME:1, Percent)] value_set=[$ (>K:ADF_VOLUME_SET) $ 5 > (>A:CIRCUIT SWITCH ON:78, bool)]
value_get=[(A:COM RECEIVE:1, Bool)] value_set=[$ (>K:COM1_RECEIVE_SELECT)]
value_get=[(A:COM RECEIVE:2, Bool)] value_set=[$ (>K:COM2_RECEIVE_SELECT)]
value_get=[(A:NAV SOUND:1, bool)] value_set=[$ (>K:RADIO_VOR1_IDENT_SET)]
value_get=[(A:NAV SOUND:2, bool)] value_set=[$ (>K:RADIO_VOR2_IDENT_SET)]
value_get=[(A:ADF SOUND:1, bool)] value_set=[$ (>K:RADIO_ADF_IDENT_SET)]
value_get=[(A:MARKER SOUND, bool)] value_set=[ (A:MARKER SOUND, bool) $ ! if{(>K:MARKER_SOUND_TOGGLE)}] 
value_get=[(A:TRANSPONDER STATE:1, Number)] value_set=[$ (>A:TRANSPONDER STATE:1, Number)]
value_get=[(A:AUTOPILOT ALTITUDE LOCK VAR, Feet)] value_set=[$ (>A:AUTOPILOT ALTITUDE LOCK VAR, Feet)]
value_get=[(A:AUTOPILOT HEADING LOCK DIR, Degree)] value_set=[$ (>A:AUTOPILOT HEADING LOCK DIR, Degree)]
value_get=[(A:NAV OBS:1, Degrees)] value_set_event=[VOR1_SET]
value_get=[(A:GPS DRIVES NAV1, Bool)] event_toggle=[TOGGLE_GPS_DRIVES_NAV1]
value_get=[(A:PROP DEICE SWITCH:1, bool)] value_set=[$ (>A:PROP DEICE SWITCH:1, bool)]
value_get=[(A:FLAPS HANDLE INDEX:1, Number)] value_inc_event=[FLAPS_INCR] value_dec_event=[FLAPS_DECR]
value_get=[(A:RUDDER TRIM, Radians)] value_inc_event=[RUDDER_TRIM_RIGHT] value_dec_event=[RUDDER_TRIM_LEFT]
value_get=[(A:ELEVATOR TRIM POSITION, Radians)] value_inc_event=[ELEV_TRIM_UP] value_dec_event=[ELEV_TRIM_DN]
value_get=[(A:KOHLSMAN SETTING MB:1, Millibars)] value_inc_event=[KOHLSMAN_INC] value_dec_event=[KOHLSMAN_DEC]
value_get=[(A:BRAKE PARKING POSITION, Bool)] value_set_event=[PARKING_BRAKE_SET] 
value_get=[(A:DECISION HEIGHT, feet)] value_inc_event=[INCREASE_DECISION_HEIGHT] value_dec_event=[DECREASE_DECISION_HEIGHT]
value_get=[(A:FUEL TANK LEFT MAIN LEVEL, Percent)] value_set=[$ (>A:FUEL TANK LEFT MAIN LEVEL, Percent)]
value_get=[(A:FUEL TANK RIGHT MAIN LEVEL, Percent)] value_set=[$ (>A:FUEL TANK RIGHT MAIN LEVEL, Percent)]
value_get=[(A:FUEL TANK SELECTOR:1, Enum)] value_set=[(>K:FUEL_SELECTOR_OFF);;;;;;;;;;;;;;;;;;;(>K:FUEL_SELECTOR_LEFT_MAIN);(>K:FUEL_SELECTOR_RIGHT_MAIN)]
value_get=[(L:var_FuelStopDown, bool)] value_set=[$ (>L:var_FuelStopDown, bool)]
value_get=[(A:ELECTRICAL BATTERY VOLTAGE, Volts)] value_set=[$ (>A:ELECTRICAL BATTERY VOLTAGE, Volts)]
value_get=[(A:TRANSPONDER CODE:1, BCO16)] value_set_event=[XPNDR_SET] 
value_get=[(A:COM STANDBY FREQUENCY:1, Frequency BCD16)] value_set_event=[COM_STBY_RADIO_SET] 
value_get=[(A:COM STANDBY FREQUENCY:2, Frequency BCD16)] value_set_event=[COM2_STBY_RADIO_SET] 
value_get=[(A:COM ACTIVE FREQUENCY:1, Frequency BCD16)] value_set_event=[COM_RADIO_SET]
value_get=[(A:COM ACTIVE FREQUENCY:2, Frequency BCD16)] value_set_event=[COM2_RADIO_SET]
value_get=[(A:NAV STANDBY FREQUENCY:1, Frequency BCD16)] value_set_event=[NAV1_STBY_SET] 
value_get=[(A:NAV STANDBY FREQUENCY:2, Frequency BCD16)] value_set_event=[NAV2_STBY_SET] 
value_get=[(A:NAV ACTIVE FREQUENCY:1, Frequency BCD16)] value_set_event=[NAV1_RADIO_SET]
value_get=[(A:NAV ACTIVE FREQUENCY:2, Frequency BCD16)] value_set_event=[NAV2_RADIO_SET]
value_get=[(A:COM STANDBY FREQUENCY:1, Frequency BCD16)] value_set_event=[COM_STBY_RADIO_SET] 
value_get=[(A:COM STANDBY FREQUENCY:2, Frequency BCD16)] value_set_event=[COM2_STBY_RADIO_SET] 
value_get=[(A:COM ACTIVE FREQUENCY:1, Frequency BCD16)] value_set_event=[COM_RADIO_SET]
value_get=[(A:COM ACTIVE FREQUENCY:2, Frequency BCD16)] value_set_event=[COM2_RADIO_SET]
value_get=[(A:NAV STANDBY FREQUENCY:1, Frequency BCD16)] value_set_event=[NAV1_STBY_SET] 
value_get=[(A:NAV STANDBY FREQUENCY:2, Frequency BCD16)] value_set_event=[NAV2_STBY_SET] 
value_get=[(A:NAV ACTIVE FREQUENCY:1, Frequency BCD16)] value_set_event=[NAV1_RADIO_SET]
value_get=[(A:NAV ACTIVE FREQUENCY:2, Frequency BCD16)] value_set_event=[NAV2_RADIO_SET]
value_get=[(A:PLANE LATITUDE, Degrees)]
value_get=[(A:PLANE LONGITUDE, Degrees)]





